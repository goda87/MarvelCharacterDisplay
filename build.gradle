// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
        maven { url 'https://maven.google.com' }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

project.ext {
    supportLibraryVersion = "26.+"
    daggerVersion = "2.11"
    butterKnifeVersion = "8.5.1"
    rxJavaVersion = "2.1.0"
    rxAndroidVersion = "2.0.1"
    timberVersion = "4.5.1"
    architectureComponentsVersion = "1.0.0"
    constraintLayoutVersion = "1.0.2"
    gsonVersion = "2.8.0"
    picassoVersion = "2.5.2"
}

/*
 * Workaround for https://code.google.com/p/android/issues/detail?id=182715
 *
 * The Android Gradle plugin is creating DataBindingExportBuildInfoTasks for the instrumentation
 * APK that generates from the app APKs layouts. This creates duplicate classes in the app and
 * instrumentation APK which leads to
 *      java.lang.IllegalAccessError: Class ref in pre-verified class resolved to unexpected implementation
 * on older devices.
 *
 * The workaround is to get the DataBindingExportBuildInfoTasks tasks for the instrumentation APK
 * and delete the files right after it creates them.
 */
subprojects {
    tasks.withType(com.android.build.gradle.internal.tasks.databinding.DataBindingExportBuildInfoTask) { task ->
        if (task.name.endsWith("AndroidTest")) {
            task.finalizedBy(tasks.create("${task.name}Workaround") << {
                task.output.deleteDir()
            })
        }
    }
}
